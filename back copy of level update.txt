seeUpdateMember AdminMenu

public void seeUpdateMember() {
		String answer ="";
		while(!answer.equalsIgnoreCase("exit")) {
			System.out.println("What would you like to do? "
					+ "\nType 'All' to view all members, column names, and their ID's."
					+ "\nTo update a particular member, type 'ID' for the ID. "
					+ "\nType 'EXIT' to exit and go back to previous menu.");
			answer = scan.nextLine();
			
			if(answer.equalsIgnoreCase("all")) {
				List<MembersInfo> list = memServ.allMembers();
				System.out.println("Here is all the Members: ");
				for(MembersInfo a:list) {
					System.out.println(a);
				}continue;
			}else if(answer.equalsIgnoreCase("exit")) {
				return;
			}else {
				int id = 0;
				String change = "";
				String columnName = "";
				System.out.println("What would you like to update?");
				columnName=scan.nextLine();
				if(columnName.equalsIgnoreCase("firstname")) {
					
					System.out.println("What would you like to change it to?");
					change=scan.nextLine();
					try {
						id=Integer.parseInt(answer);
					}catch(NumberFormatException e) {
						System.out.println("Not a valid input. Please try again.");
						continue;
					}
					MembersInfo member = memServ.getUpdateMemberFirst(id, change);
				}else if(columnName.equalsIgnoreCase("lastname")) {
					
					System.out.println("What would you like to change it to?");
					change=scan.nextLine();
					try {
						id=Integer.parseInt(answer);
					}catch(NumberFormatException e) {
						System.out.println("Not a valid input. Please try again.");
						continue;
					}
					MembersInfo member = memServ.getUpdateMemberLast(id, change);
				
				}else if(columnName.equalsIgnoreCase("eMail")) {
					
					System.out.println("What would you like to change it to?");
					change=scan.nextLine();
					try {
						id=Integer.parseInt(answer);
					}catch(NumberFormatException e) {
						System.out.println("Not a valid input. Please try again.");
						continue;
					}
					MembersInfo member = memServ.getUpdateMembereMail(id, change);
				}else if(columnName.equalsIgnoreCase("username")) {
					
					System.out.println("What would you like to change it to?");
					change=scan.nextLine();
					try {
						id=Integer.parseInt(answer);
					}catch(NumberFormatException e) {
						System.out.println("Not a valid input. Please try again.");
						continue;
					}
					MembersInfo member = memServ.getUpdateMemberUser(id, change);
				}else if(columnName.equalsIgnoreCase("password")) {
					
					System.out.println("What would you like to change it to?");
					change=scan.nextLine();
					try {
						id=Integer.parseInt(answer);
					}catch(NumberFormatException e) {
						System.out.println("Not a valid input. Please try again.");
						continue;
					}
					MembersInfo member = memServ.getUpdateMemberPass(id, change);
				}
				
			}
		}
		
	}
_______________________________________________________________________________________________

MemberService
public MembersInfo getUpdateMemberFirst(int id, String change) {
		return membersDAO.getUpdateFirstName(id, change);
		
	}

	public MembersInfo getUpdateMemberLast(int id, String change) {
		return membersDAO.getUpdateMemberLast(id, change);
	}

	public MembersInfo getUpdateMembereMail(int id, String change) {
		return membersDAO.getUpdateEmail(id, change);
	}

	public MembersInfo getUpdateMemberUser(int id, String change) {
		return membersDAO.getUpdateUser(id, change);
	}

	public MembersInfo getUpdateMemberPass(int id, String change) {
		return membersDAO.getUpdatePass(id, change);
	}
_________________________________________________________________________________________________________
MembersDAO

public abstract MembersInfo getUpdateFirstName(int id, String change);

	public abstract MembersInfo getUpdateMemberLast(int id, String change);

	public abstract MembersInfo getUpdateEmail(int id, String change);

	public abstract MembersInfo getUpdateUser(int id, String change);

	public abstract MembersInfo getUpdatePass(int id, String change);

_______________________________________________________________________________________________________
MembersDAOImpl

@Override
	public MembersInfo getUpdateFirstName(int id, String change) {
		try(Connection conn = ConnectionUtil.getConnection()){		
			String sql = "UPDATE MembersInfo SET firstName = '"+change+"' WHERE memberID = "+id+";";
			PreparedStatement prepares = conn.prepareStatement(sql); 
			
			
			System.out.println(change);
			System.out.println(id);

			//String eMail = result.getString("eMail");
			prepares.execute();

			}
			
		catch(SQLException e) {
			e.printStackTrace();
		
		}
		return null;
	}

	@Override
	public MembersInfo getUpdateMemberLast(int id, String change) {
		try(Connection conn = ConnectionUtil.getConnection()){		
			String sql = "UPDATE MembersInfo SET lastName = '"+change+"' WHERE memberID = "+id+";";
			PreparedStatement prepares = conn.prepareStatement(sql); 
			
			
			System.out.println(change);
			System.out.println(id);

			//String eMail = result.getString("eMail");
			prepares.execute();

			}
			
		catch(SQLException e) {
			e.printStackTrace();
		
		}
		return null;
	}

	@Override
	public MembersInfo getUpdateEmail(int id, String change) {
		try(Connection conn = ConnectionUtil.getConnection()){		
			String sql = "UPDATE MembersInfo SET eMail = '"+change+"' WHERE memberID = "+id+";";
			PreparedStatement prepares = conn.prepareStatement(sql); 
			
			
			System.out.println(change);
			System.out.println(id);

			//String eMail = result.getString("eMail");
			prepares.execute();

			}
			
		catch(SQLException e) {
			e.printStackTrace();
		
		}
		return null;
	}

	@Override
	public MembersInfo getUpdateUser(int id, String change) {
		try(Connection conn = ConnectionUtil.getConnection()){		
			String sql = "UPDATE MembersInfo SET userName = '"+change+"' WHERE memberID = "+id+";";
			PreparedStatement prepares = conn.prepareStatement(sql); 
			
			
			System.out.println(change);
			System.out.println(id);

			//String eMail = result.getString("eMail");
			prepares.execute();

			}
			
		catch(SQLException e) {
			e.printStackTrace();
		
		}
		return null;
	}

	@Override
	public MembersInfo getUpdatePass(int id, String change) {
		try(Connection conn = ConnectionUtil.getConnection()){		
			String sql = "UPDATE MembersInfo SET pWord= '"+change+"' WHERE memberID = "+id+";";
			PreparedStatement prepares = conn.prepareStatement(sql); 
			
			
			System.out.println(change);
			System.out.println(id);

			//String eMail = result.getString("eMail");
			prepares.execute();

			}
			
		catch(SQLException e) {
			e.printStackTrace();
		
		}
		return null;
	}


















